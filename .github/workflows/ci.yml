name: "CI"
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  Changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      funes: ${{ steps.filter.outputs.funes }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            funes:
              - 'app/*'
              - 'src/**'
              - 'test/**'
              - '*.yaml'
              - '*.cabal'
              - '*.lock'
              - '.github/workflows/*.yml'

  Build:
    needs: changes
    if: ${{ needs.changes.outputs.funes == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        ghc-version: [9.8.4]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
        with:
          ghc-version: ${{ matrix.ghc-version }}
      - name: Build
        run: |
          stack --compiler ghc-${{ matrix.ghc-version }} build funes:lib funes:exe:fake-snake
  Format:
    if: ${{ needs.changes.outputs.funes == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
      - uses: haskell-actions/run-fourmolu@v9
        with:
          version: "0.14.0.0"
          pattern: |
            src/*.hs
            test/**/*.hs
            !.stack-work/
          follow-symbolic-links: false
  Lint:
    if: ${{ needs.changes.outputs.funes == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
      - name: "Set up HLint"
        uses: rwe/actions-hlint-setup@v1
        with:
          version: "3.5"
      - name: "Run HLint"
        uses: rwe/actions-hlint-run@v2
        with:
          path: '["src/", "test/"]'
          fail-on: warning
  Tests:
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      fail-fast: false
      matrix:
        ghc-version: [9.8.4]
    if: ${{ needs.changes.outputs.funes == 'true' && always() }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
        with:
          ghc-version: ${{ matrix.ghc-version }}
      - name: Run unit tests
        run: stack test --compiler ghc-${{ matrix.ghc-version }}

  Doc:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      pages: write
      id-token: write
    if: ${{ needs.changes.outputs.funes == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
        with:
          ghc-version: ${{ matrix.ghc-version }}
      - name: Gen doc
        run: |
          stack haddock 
          echo "HADDOCK_PATH=$(stack path --local-doc-root)" >> $GITHUB_ENV
      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.HADDOCK_PATH }}
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.PAT }}
